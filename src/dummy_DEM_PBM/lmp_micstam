#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Fri Oct  30 16:19:41 2017

@author: Chaitanya Sampat

-------------------------------------------------------------------------------------------------
This method copies the dummy test files from the copypath to the 

"""

import numpy as np
import sys
import random
import time 
import os
import glob
import shutil
import re
import argparse


def dummy_DEM(last_timestep_index, copyPath):
    collision_file_list = glob.glob(copyPath+'/collision*.atom')
    impact_file_list = glob.glob(copyPath+'/impact*.atom')
    num_start_collision = re.search("collision",collision_file_list[0]).end()
    num_start_impact = re.search("impact",impact_file_list[0]).end()
    num_end_collision = re.search(".atom",collision_file_list[0]).start()
    num_end_impact = re.search(".atom",impact_file_list[0]).start()
    a = 0
    if((num_end_collision - num_start_collision) == 7):
        collision_file_list = sorted(collision_file_list, key=lambda x: float(x[(num_start_collision):(num_end_collision + 1)]))
    else:
        collision_file_list = sorted(collision_file_list, key=lambda x: float(x[(num_start_collision):(num_end_collision)]))
    if((num_end_impact - num_start_impact) == 7):
        impact_file_list = sorted(impact_file_list, key=lambda x: float(x[(num_start_impact):(num_end_impact + 1)]))
    else:
        impact_file_list = sorted(impact_file_list, key=lambda x: float(x[(num_start_impact):(num_end_impact)]))
    #print(collision_file_list)
    for x in range(last_timestep_index,len(collision_file_list)):
        rand_num =  random.randint(2, 15)
        print(x)
        collision_nextfile = collision_file_list[x]
        impact_nextfile = impact_file_list[x]
        print(collision_nextfile)
        print(impact_nextfile)
        if (os.path.isfile(collision_nextfile) and os.path.isfile(impact_nextfile)):
            shutil.copy2(collision_nextfile, os.getcwd())
            shutil.copy2(impact_nextfile, os.getcwd())
            print("Waiting")
            time.sleep(rand_num)
        else:
            time.sleep(rand_num)
            print("Next file")            
        a = x
    return a

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-in')
    args = parser.parse_args()
    a = dummy_DEM(0, os.environ['COPY_PATH'])
#a = dummy_DEM("/home/chai/Documents/git/CyberManufacturing/src/dummy_DEM_PBM/sample_copy", 0, 1)
#print(a)
